
Routing shortcuts for Addresses (users/2/addresses/1) should map
- resources_path to /users/2/addresses
- resource_path to /users/2/addresses/1
- resource_path(9) to /users/2/addresses/9
- edit_resource_path to /users/2/addresses/1/edit
- edit_resource_path(9) to /users/2/addresses/9/edit
- new_resource_path to /users/2/addresses/new

resource_service in AddressesController
- should build new address with @user foreign key with new
- should find @address with find(@address.id)
- should raise RecordNotFound with find(@other_address.id)
- should find only addresses belonging to @user with find(:all)

Requesting /users/2/addresses
- should find the user
- should assign the found user for the view
- should assign the user_addresses association as the addresses resource_service

Requesting /users/foo/addresses (testing non-integer ids)
- should try and find user with id == 'foo'

Requesting /users/2/addresses using GET
- should be successful
- should render index.rhtml
- should find all addresses
- should assign the found addresses for the view

Requesting /users/2/addresses/1 using GET
- should be successful
- should render show.rhtml
- should find the thing requested
- should assign the found thing for the view

Requesting /users/2/addresses/new using GET
- should be successful
- should render new.rhtml
- should create an new thing
- should not save the new thing
- should assign the new thing for the view

Requesting /users/2/addresses/1/edit using GET
- should be successful
- should render edit.rhtml
- should find the thing requested
- should assign the found Thing for the view

Requesting /users/2/addresses using POST
- should create a new address
- should redirect to the new address

Requesting /users/2/addresses/1 using PUT
- should find the address requested
- should update the found address
- should assign the found address for the view
- should redirect to the address

Requesting /users/2/addresses/1 using DELETE
- should find the address requested
- should call destroy on the found thing
- should redirect to the things list

Routing shortcuts for Comments (forums/3/posts/2/comments/1) should map
- resources_path to /forums/3/posts/2/comments
- resource_path to /forums/3/posts/2/comments/1
- resource_path(9) to /forums/3/posts/2/comments/9
- edit_resource_path to /forums/3/posts/2/comments/1/edit
- edit_resource_path(9) to /forums/3/posts/2/comments/9/edit
- new_resource_path to /forums/3/posts/2/comments/new
- resource_tags_path to /forums/3/posts/2/comments/1/tags
- resource_tags_path(9) to /forums/3/posts/2/comments/9/tags
- resource_tag_path(5) to /forums/3/posts/2/comments/1/tags/5
- resource_tag_path(9,5) to /forums/3/posts/2/comments/9/tags/5

resource_service in CommentsController
- should build new comment with @post foreign key with new
- should find @comment with find(@comment.id)
- should raise RecordNotFound with find(@other_post.id)
- should find only comments belonging to @post with find(:all)

Requesting /forums/3/posts/2/comments (testing the before filters)
- should find the forum
- should assign the found forum for the view
- should find the post
- should assign the found post for the view
- should assign the post_comments association as the comments resource_service

Requesting /forums/3/posts/2/comments using GET
- should be successful
- should render index.rhtml
- should find comments in post
- should assign the found comments for the view

Requesting /forums/3/posts/3/comments/1 using GET
- should be successful
- should render show.rhtml
- should find the comment requested
- should assign the found comment for the view

Requesting /forums/3/posts/3/comments/new using GET
- should be successful
- should render new.rhtml
- should create a new comment
- should not save the new comment
- should assign the new comment for the view

Requesting /forums/3/posts/3/comments/1/edit using GET
- should be successful
- should render edit.rhtml
- should find the comment requested
- should assign the found comment for the view

Requesting /forums/3/posts/3/comments using POST
- should create a new comment
- should redirect to the new comment

Requesting /forums/3/posts/3/comments/1 using PUT
- should find the comment requested
- should update the found comment
- should assign the found comment for the view
- should redirect to the comment

Requesting /forums/3/posts/3/comments/1 using DELETE
- should find the comment requested
- should call destroy on the found comment
- should redirect to the comments list

Routing shortcuts for ForumPosts (forums/2/posts/1) should map
- resources_path to /forums/2/posts
- resource_path to /forums/2/posts/1
- resource_path(9) to /forums/2/posts/9
- edit_resource_path to /forums/2/posts/1/edit
- edit_resource_path(9) to /forums/2/posts/9/edit
- new_resource_path to /forums/2/posts/new
- resource_tags_path to /forums/2/posts/1/tags
- resource_tags_path(9) to /forums/2/posts/9/tags
- resource_tag_path(5) to /forums/2/posts/1/tags/5
- resource_tag_path(9,5) to /forums/2/posts/9/tags/5

resource_service in ForumPostsController
- should build new post with @forum foreign key with new
- should find @post with find(@post.id)
- should raise RecordNotFound with find(@other_post.id)
- should find only posts belonging to @forum with find(:all)

Requesting /forums/2/posts (testing the before filters)
- should find the forum
- should assign the found forum for the view
- should assign the forum_posts association as the posts resource_service

Requesting /forums/2/posts using GET
- should be successful
- should render index.rhtml
- should find all posts, in reverse order (because of AbstractPostsController)
- should assign the found posts for the view

Requesting /forums/2/posts/1 using GET
- should be successful
- should render show.rhtml
- should find the thing requested
- should assign the found thing for the view

Requesting /forums/2/posts/new using GET
- should be successful
- should render new.rhtml
- should create an new thing
- should not save the new thing
- should assign the new thing for the view

Requesting /forums/2/posts/1/edit using GET
- should be successful
- should render edit.rhtml
- should find the thing requested
- should assign the found Thing for the view

Requesting /forums/2/posts using POST
- should make a new post
- should attempt to save the new post
- should redirect to the new post.save == true
- should render new when post.save == false

Requesting /forums/2/posts/1 using PUT
- should find the post requested
- should update the found post
- should assign the found post for the view
- should redirect to the post

Requesting /forums/2/posts/1 using DELETE
- should find the post requested
- should call destroy on the found thing
- should redirect to the things list

Routing shortcuts for Forums should map
- resources_path to /forums
- resources_path(:foo => 'bar') to /forums?foo=bar
- resource_path to /forums/2
- resource_path(:foo => 'bar') to /forums/2?foo=bar
- resource_path(9) to /forums/9
- resource_path(9, :foo => 'bar') to /forums/2?foo=bar
- edit_resource_path to /forums/2/edit
- edit_resource_path(9) to /forums/9/edit
- new_resource_path to /forums/new
- resources_url to http://test.host/forums
- resource_url to http://test.host/forums/2
- resource_url(9) to http://test.host/forums/9
- edit_resource_url to http://test.host/forums/2/edit
- edit_resource_url(9) to http://test.host/forums/9/edit
- new_resource_url to http://test.host/forums/new
- resource_interests_path to /forums/2/interests
- resource_interests_path(:foo => 'bar') to /forums/2/interests?foo=bar
- resource_interests_path(9) to /forums/9/interests
- resource_interests_path(9, :foo => 'bar') to /forums/9/interests?foo=bar
- resource_interest_path(5) to /forums/2/interests/5
- resource_interest_path(9,5) to /forums/9/interests/5
- resource_interest_path(9,5, :foo => 'bar') to /forums/9/interests/5?foo=bar
- new_resource_interest_path(9) to /forums/9/interests/new
- edit_resource_interest_path(5) to /forums/2/interests/5/edit
- edit_resource_interest_path(9,5) to /forums/9/interests/5/edit
- respond_to?(:edit_resource_interest_path) should == true
- resource_users_path should raise informative NoMethodError
- any_old_missing_method should raise NoMethodError
- respond_to?(:resource_users_path) should == false

resource_service in ForumsController
- should build new forum with new
- should find @forum with find(@forum.id)
- should find all forums with find(:all)

Requesting /forums using GET
- should be successful
- should render index.rhtml
- should find all forums
- should assign the found forums for the view

Requesting /forums.xml using GET
- should be successful
- should find all forums
- should render the found forums as xml

Requesting /forums using XHR GET
- should be successful
- should find all forums
- should render index.rjs

Requesting /forums/1 using GET
- should be successful
- should render show.rhtml
- should find the forum requested
- should assign the found forum for the view

Requesting /forums/1.xml using GET
- should be successful
- should find the forum requested
- should render the found forum as xml

Requesting /forums/1 using XHR GET
- should be successful
- should render show.rjs
- should find the forum requested
- should assign the found forum for the view

Requesting /forums/new using GET
- should be successful
- should render new.rhtml
- should create an new forum
- should not save the new forum
- should assign the new forum for the view

Requesting /forums/1/edit using GET
- should be successful
- should render edit.rhtml
- should find the forum requested
- should assign the found Forum for the view

Requesting /forums using POST
- should create a new forum
- should set the flash notice
- should redirect to the new forum

Requesting /forums using XHR POST
- should create a new forum
- should not set the flash notice
- should render create.rjs

Requesting /forums/1 using PUT
- should find the forum requested
- should set the flash notice
- should update the found forum
- should assign the found forum for the view
- should redirect to the forum

Requesting /forums/1 using XHR PUT
- should find the forum requested
- should update the found forum
- should not set the flash notice
- should assign the found forum for the view
- should render update.rjs

Requesting /forums/1 using DELETE
- should find the forum requested
- should call destroy on the found forum
- should set the flash notice
- should redirect to the forums list

Requesting /forums/1 using XHR DELETE
- should find the forum requested
- should not set the flash notice
- should call destroy on the found forum
- should render destroy.rjs

Routing shortcuts for Interests via Forum (forums/1/interests/2) should map
- resources_path to /forums/1/interests
- resource_path to /forums/1/interests/2
- resource_path(9) to /forums/1/interests/9
- edit_resource_path to /forums/1/interests/2/edit
- edit_resource_path(9) to /forums/1/interests/9/edit
- new_resource_path to /forums/1/interests/new

resource_service in InterestsController via Forum
- should build new interest with @forum fk and type with new
- should find @interest with find(@interest.id)
- should raise RecordNotFound with find(@other_interest.id)
- should find only interests belonging to @forum with find(:all)

Requesting /forums/1/interests using GET
- should find the forum
- should assign the found forum as :interested_in for the view
- should assign the forum_interests association as the interests resource_service

Routing shortcuts for Interests via User (users/1/interests/2) should map
- resources_path to /users/1/interests
- resource_path to /users/1/interests/2
- resource_path(9) to /users/1/interests/9
- edit_resource_path to /users/1/interests/2/edit
- edit_resource_path(9) to /users/1/interests/9/edit
- new_resource_path to /users/1/interests/new

resource_service in InterestsController via Forum
- should build new interest with @user fk and type with new
- should find @interest with find(@interest.id)
- should raise RecordNotFound with find(@other_interest.id)
- should find only interests belonging to @user with find(:all)

Requesting /users/1/interests using GET
- should find the user
- should assign the found user as :interested_in for the view
- should assign the user_interests association as the interests resource_service

Routing shortcuts for Tags via Forum, Post and Comment (forums/1/posts/2/comments/3tags/4) should map
- resources_path to /forums/1/posts/2/comments/3/tags
- resource_path to /forums/1/posts/2/comments/3/tags/4
- resource_path(9) to /forums/1/posts/2/comments/3/tags/9
- edit_resource_path to /forums/1/posts/2/comments/3/tags/4/edit
- edit_resource_path(9) to /forums/1/posts/2/comments/3/tags/9/edit
- new_resource_path to /forums/1/posts/2/comments/3/tags/new

resource_service in TagsController via Forum, Post and Comment
- should build new tag with @comment fk and type with new
- should find @tag with find(@tag.id)
- should raise RecordNotFound with find(@other_tag.id)
- should find only tags belonging to @post with find(:all)

Requesting /forums/1/posts/2/tags using GET
- should find the forum
- should find the post
- should find the comment
- should assign the found comment as :taggable for the view
- should assign the comment_tags association as the tags resource_service

Routing shortcuts for Tags via Forum and Post (forums/1/posts/2/tags/3) should map
- resources_path to /forums/1/posts/2/tags
- resource_path to /forums/1/posts/2/tags/3
- resource_path(9) to /forums/1/posts/2/tags/9
- edit_resource_path to /forums/1/posts/2/tags/3/edit
- edit_resource_path(9) to /forums/1/posts/2/tags/9/edit
- new_resource_path to /forums/1/posts/2/tags/new

resource_service in TagsController via Forum and Post
- should build new tag with @post fk and type with new
- should find @tag with find(@tag.id)
- should raise RecordNotFound with find(@other_tag.id)
- should find only tags belonging to @post with find(:all)

Requesting /forums/1/posts/2/tags using GET
- should find the forum
- should find the post
- should assign the found post as :taggable for the view
- should assign the post_tags association as the tags resource_service

Routing shortcuts for Tags via Forum (forums/1/tags/2) should map
- resources_path to /forums/1/tags
- resource_path to /forums/1/tags/2
- resource_path(9) to /forums/1/tags/9
- edit_resource_path to /forums/1/tags/2/edit
- edit_resource_path(9) to /forums/1/tags/9/edit
- new_resource_path to /forums/1/tags/new

resource_service in TagsController via Forum
- should build new tag with @forum fk and type with new
- should find @tag with find(@tag.id)
- should raise RecordNotFound with find(@other_tag.id)
- should find only tags belonging to @forum with find(:all)

Requesting /forums/1/tags using GET
- should find the forum
- should assign the found forum as :taggable for the view
- should assign the forum_tags association as the tags resource_service

Routing shortcuts for Tags via User and Address (users/1/addresses/2/tags/3) should map
- resources_path to /users/1/addresses/2/tags
- resource_path to /users/1/addresses/2/tags/3
- resource_path(9) to /users/1/addresses/2/tags/9
- edit_resource_path to /users/1/addresses/2/tags/3/edit
- edit_resource_path(9) to /users/1/addresses/2/tags/9/edit
- new_resource_path to /users/1/addresses/2/tags/new

resource_service in TagsController via User and Address
- should build new tag with @address fk and type with new
- should find @tag with find(@tag.id)
- should raise RecordNotFound with find(@other_tag.id)
- should find only tags belonging to @address with find(:all)

Requesting /users/1/addresses/2/tags using GET
- should find the user
- should find the address
- should assign the found address as :taggable for the view
- should assign the address_tags association as the tags resource_service

ActionView with resources_controller Helper
- should forward #resource_name to controller
- should forward #resources_name to controller
- should forward #resource to controller
- should forward #resources to controller
- should not forward unknown url helper to controller

Helper#form_for_resource (when resource is new record)
- should call form_for with create form options

Helper#form_for_resource (when resource is existing record)
- should call form_for with update form options

Helper#remote_form_for_resource (when resource is existing record)
- should call remote_form_for with update form options

A controller's resource_service
- should pass unknown methods to the resource service of the controller
- may be explicitly set with #resource_service=

ResourcesController#resources_request
- should be [] for /users
- should be [[users, id]] for /users/id
- should be [[users, id]] for /users/id/foos
- should be [[users, id], [foos, id]] for /users/id/foos/id

ResourcesController (route_name, singular_route_name and name_prefix)
- route_name should be the controller_name by default
- singular_route_name should be route_name.singualrize(d)
- should inherit route_name and singular_route_name from parent, unless explicitly set
- should allow overriding on instance, and not affect class route_name, singular_route_name, or name_prefix

Automatic (route_name, name_prefix) for
- ForumsController should be ('forums', '')
- PostsController should be ('posts', '')
- ForumPostsController should be ('posts', 'forum_')
- UserPostsController should be ('posts', 'user_')
- CommentsController should be ('comments', '')
- TagsController should be ('tags', '')
- HasAComplexNameController should be ('has_a_complex_name', '')
- EnclosedByFooHasAComplexNameController should be ('has_a_complex_name', 'enclosed_by_foo_')

Finished in 2.459969 seconds

324 examples, 0 failures
